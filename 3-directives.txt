    basic directive
        @Directive({
            selector: "[appBasicHeighlight]"
        })
        export class BasicHeighlightDirective implements OnInit {
            constructor(private elementRef: ElementRef) {}

            ngOnInit(): void {
                // BAD PRACTISE!!!!, dont change dom with ref
                this.elementRef.nativeElement.style.backgroundColor = "green"
            }

        }
        ---
        <p appBasicHeighlight >paragraph with green background</p>


        //since changing dom directly is bad practise, we use (renderer: Renderer2) to change dom
        constructor(private elRef: ElementRef, private renderer: Renderer2) { }

        ngOnInit(): void {
            this.renderer.setStyle(this.elRef.nativeElement, 'background-color', "red")
        }
        

        // listen to host events
        @HostListener('mouseenter') mouseenter(event: Event) {
            this.renderer.setStyle(this.elRef.nativeElement, 'background-color', "red")
        }

        //bind to host properties
        @HostBinding('style.backgroundColor') backgroundColor = "transparent";
        ...
        method() {
            this.backgroundColor = "red"
        }


        //define custom directive properties and bind to them
        @Input() defaultColor = "trasnparent"
        ---
        <p directiveSelector [defaultColor]="'yellow'" ></p>

        //cutome directive properties can have the same name as the directive, as in the case of ngClass, ngStyle...
        @Input('directiveSelector') defaultColor = "transparent"
        ---
        <p [directiveSelector]="'yellow'" ></p>

        //you can ommit the square brackets [] and single quotes '' if you are passing down a string and not a ts expression
        <p directiveSelector defaultColor="yellow" ></p>
        ---
        only do this if it is clear that defaultColor is not a native <p> attribute

    
    structural directives behind the scenes
        video 099
        <p *ngIf="booealn expression" ></p>
        ---equivelant to--- 
        <ng-template [ngIf]="booealn expression">
        <p></p>
        </ng-template>